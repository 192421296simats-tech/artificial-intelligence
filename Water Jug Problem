from collections import deque

def water_jug(x, y, d):
    visited = set()
    q = deque([(0, 0)])   # (jug1, jug2)

    while q:
        a, b = q.popleft()
        if (a, b) in visited:
            continue
        visited.add((a, b))

        print(a, b)  # current state

        if a == d or b == d:
            print("Solved!")
            return

        # Possible moves
        q.append((x, b))        # Fill jug1
        q.append((a, y))        # Fill jug2
        q.append((0, b))        # Empty jug1
        q.append((a, 0))        # Empty jug2
        q.append((a - min(a, y - b), b + min(a, y - b)))  # Pour jug1 → jug2
        q.append((a + min(b, x - a), b - min(b, x - a)))  # Pour jug2 → jug1

    print("No solution")

                                                                                

output:
0 0
4 0
0 3
4 3
1 3
3 0
1 0
3 3
0 1
4 2
Solved!

=== Code Execution Successful ===
